<?php

namespace RentBundle\Repository;

namespace Mobile\MobileAPIBundle\Repository;
use EspritApiBundle\Entity\Location;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NonUniqueResultException;
use Doctrine\ORM\Query;
use Doctrine\ORM\QueryBuilder;




/**
 * LocationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LocationRepository extends \Doctrine\ORM\EntityRepository
{
    public function searchLocationByTitre($id,$titre)
    {
        try {
            return $this->getEntityManager()
                ->createQuery(
                    "SELECT titre
                FROM MobileAPIBundle:Location
                p WHERE location.titre =:titre"
                )
                ->setParameter('titre', $titre)
                ->getOneOrNullResult();
        } catch (NonUniqueResultException $e) {
        }
    }


    public function searchByLieu($str){
        return $this->getEntityManager()
            ->createQuery(
                'SELECT l
                    FROM RentBundle:Location l 
                    WHERE l.lieu LIKE :str'

            )
            ->setParameter('str', '%'.$str.'%')
            ->getResult();
    }


    public function nbrReservation()
    {
        $qb = $this->createQueryBuilder('reservation')
            ->select('count(reservation.nbrReservation)');
        return $qb->getQuery()
            ->getSingleScalarResult();


    }
    public function nbrReservationByLocation()
    {
        try
        {
            return  $this->getEntityManager()
                ->createQuery("SELECT COUNT(l.id)  FROM MobileAPIBundle:Reservation r JOIN MobileAPIBundle:Location d WHERE p.id=d.id GROUP BY p.id")
                ->getOneOrNullResult();
        }
        catch (NonUniqueResultException $e) {
        }
    }
}
